= render :partial => 'menu'
#scripts-docs
  ol.toc
    li
      a href="#intro" Intro
    li
      a href="#quickstart" QuickStart
    li
      a href="#api" API
      ol
        li
          a href="#api.cointhink"
            | cointhink
        ol
          li
            a href="#api.cointhink.exchange"
              | exchange
          li
            a href="#api.cointhink.log"
              | log
          li
            a href="#api.cointhink.trade"
              | trade
        li
          a href="#api.cointhink.db"
            | cointhink.db
        ol
          li
            a href="#api.cointhink.db.load"
              | load

  .content
    H3 Cointhink Scripting
    H2 (Disabled until futher notice)

    a name="intro"
    h4 Intro
    p
      ' Cointhink is a scripting platform for analysis of bitcoin markets.
      ' Scripts are written in javascript and executed with Node.js.
      ' Automated
      ' trading algorithms can be quickly implement and evaluated.
      ' Real-world conditions are created with market data (currently MtGox)
      ' and a simulated trading engine.

    a name="quickstart"
    h4 QuickStart
    p
      ' The cointhink script below will watch the ticker from mtgox.
      ' To try it out, use the Add New Script button from the Script Manager screen,
      ' then press the edit button.

    - example = File.read('app/views/scripts/example1.js')
    == CodeRay.scan(example, :javascript).div

    p
      ' Copy and paste the code into the editor and hit Save, then press Start.
    p
      ' Messages from the script will show up in the Log section of the Script Detail page.

    a name="api"
    h4 API
    .api-cointaner style="margin-left: 1em"
      a name="api.cointhink"
      H4 cointhink
      ul
        li
          a name="api.cointhink.exchange"
          span.apimethod exchange(exchange_name, function callback(ticker){})
          p
            ' Receive ticker information from the named exchange. The callback
            ' is called every time a new trade is posted.

        li
          a name="api.cointhink.log"
          span.apimethod log(message)
          p Write a message to the script log.

        li
          a name="api.cointhink.trade"
          span.apimethod trade(exchange, product, amount, buysell, currency, price, function callback(notice){})
          p
            ' Simulate a trade order on the exchange to buy or sell an amount of the product
            ' at a price in a currency.

      a name="api.cointhink.db"
      H4 cointhink.db
      ul
        li style='list-style:none; font-style: italic'
          a name="api.cointhink.db.load"
          span.apimethod load(callback)
          p
            ' Load previous stored variables from permament storage.
            ' The callback receives an object containing the stored
            ' values.

